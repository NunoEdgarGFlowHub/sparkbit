struct StatusResponse {
	connected bool
	synced bool
	blocks int
}

struct ListWallet {
	id string
	description string
}

struct ListWalletsResponse { 
	wallets []ListWallet
}

struct AddressBookEntry {
	label string
	bitcoinAddress string
	coinsparkAddress string
	}

struct AssetTransactionAmount {
	assetRef string [optional]
	raw int
	qty float
	display string
	name string
	name_short string
}

// Barrister does not have a hashmap or dictionary type structure
//struct AssetTransactionAmountEntry {
//	key string
//	value AssetTransactionAmount
//}

struct AssetTransaction {
	unixtime int
	confirmations int
	incoming bool
	amounts []AssetTransactionAmount
	fee float [optional]
	txid string
	}

struct AssetBalanceAmount {
	raw int
	qty float
	display string
	}

struct AssetBalance {
	assetRef string
	balance AssetBalanceAmount
	spendable AssetBalanceAmount
	name string
	name_short string
}

interface SparkBitJSONRPCService {
	getstatus() StatusResponse
	listwallets() ListWalletsResponse
	deletewallet(walletID string) bool
	createwallet(description string) bool
	// or return ListWallet ?

	setassetvisible(walletID string, assetRef string, visibility bool) bool
	addasset(walletID string, assetRef string) bool
	refreshasset(walletID string, assetRef string) bool

	listaddresses(walletID string) []AddressBookEntry
	createaddress(walletID string, quantity int) []AddressBookEntry
	setaddresslabel(walletID string, address string, label string) bool

	listbalances(walletID string, onlyvisible bool) []AssetBalance
  sendbitcoin(walletID string, address string, amount float) bool
//  sendasset(walletID string, address string, assetRef string, quantity int, rounding...
  listtransactions(walletID string, limit int) []AssetTransaction

}

