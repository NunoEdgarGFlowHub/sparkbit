package org.sparkbit.jsonrpc.autogen;

/**
 * DO NOT EDIT THIS FILE!
 * 
 * Generated by Barrister Idl2Java: https://github.com/coopernurse/barrister-java
 * 
 * Generated at: Sat Nov 08 11:00:31 PST 2014
 */
public class AssetBalance implements com.bitmechanic.barrister.BStruct {


    public static class Builder {
        private String _assetRef;
        public Builder assetRef(String assetRef) { this._assetRef = assetRef; return this; }
        private AssetBalanceAmount _balance;
        public Builder balance(AssetBalanceAmount balance) { this._balance = balance; return this; }
        private AssetBalanceAmount _spendable;
        public Builder spendable(AssetBalanceAmount spendable) { this._spendable = spendable; return this; }
        private String _name;
        public Builder name(String name) { this._name = name; return this; }
        private String _name_short;
        public Builder name_short(String name_short) { this._name_short = name_short; return this; }
        public AssetBalance build() {
            return new AssetBalance(this._assetRef, this._balance, this._spendable, this._name, this._name_short);
        }

        public Builder() { }
        public Builder(AssetBalance obj) {
            this._assetRef = obj.getAssetRef();
            this._balance = obj.getBalance();
            this._spendable = obj.getSpendable();
            this._name = obj.getName();
            this._name_short = obj.getName_short();
        }
    }

    private AssetBalanceAmount balance;
    private String name_short;
    private String name;
    private String assetRef;
    private AssetBalanceAmount spendable;

    public AssetBalance() {
        super();
    }

    public AssetBalance(java.util.Map _map) throws com.bitmechanic.barrister.RpcException {
        this(
            (String)com.bitmechanic.barrister.StringTypeConverter.unmarshal(_map.get("assetRef"), false),
            (AssetBalanceAmount)com.bitmechanic.barrister.StructTypeConverter.unmarshal(AssetBalanceAmount.class, _map.get("balance"), false),
            (AssetBalanceAmount)com.bitmechanic.barrister.StructTypeConverter.unmarshal(AssetBalanceAmount.class, _map.get("spendable"), false),
            (String)com.bitmechanic.barrister.StringTypeConverter.unmarshal(_map.get("name"), false),
            (String)com.bitmechanic.barrister.StringTypeConverter.unmarshal(_map.get("name_short"), false)
        );
    }

    @org.codehaus.jackson.annotate.JsonCreator
    public AssetBalance(
            @org.codehaus.jackson.annotate.JsonProperty("assetRef") String assetRef, 
            @org.codehaus.jackson.annotate.JsonProperty("balance") AssetBalanceAmount balance, 
            @org.codehaus.jackson.annotate.JsonProperty("spendable") AssetBalanceAmount spendable, 
            @org.codehaus.jackson.annotate.JsonProperty("name") String name, 
            @org.codehaus.jackson.annotate.JsonProperty("name_short") String name_short) {
        super();
        this.assetRef = assetRef;
        this.balance = balance;
        this.spendable = spendable;
        this.name = name;
        this.name_short = name_short;
    }

    public void setBalance(AssetBalanceAmount balance) {
        this.balance = balance;
    }

    public AssetBalanceAmount getBalance() {
        return this.balance;
    }

    public void setName_short(String name_short) {
        this.name_short = name_short;
    }

    public String getName_short() {
        return this.name_short;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getName() {
        return this.name;
    }

    public void setAssetRef(String assetRef) {
        this.assetRef = assetRef;
    }

    public String getAssetRef() {
        return this.assetRef;
    }

    public void setSpendable(AssetBalanceAmount spendable) {
        this.spendable = spendable;
    }

    public AssetBalanceAmount getSpendable() {
        return this.spendable;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("AssetBalance:");
        sb.append(" balance=").append(balance);
        sb.append(" name_short=").append(name_short);
        sb.append(" name=").append(name);
        sb.append(" assetRef=").append(assetRef);
        sb.append(" spendable=").append(spendable);
        return sb.toString();
    }

    @Override
    public boolean equals(Object _other) {
        if (this == _other) { return true; }
        if (_other == null) { return false; }
        if (!(_other instanceof AssetBalance)) { return false; }
        AssetBalance _o = (AssetBalance)_other;
        if (balance == null && _o.balance != null) { return false; }
        else if (balance != null && !balance.equals(_o.balance)) { return false; }
        if (name_short == null && _o.name_short != null) { return false; }
        else if (name_short != null && !name_short.equals(_o.name_short)) { return false; }
        if (name == null && _o.name != null) { return false; }
        else if (name != null && !name.equals(_o.name)) { return false; }
        if (assetRef == null && _o.assetRef != null) { return false; }
        else if (assetRef != null && !assetRef.equals(_o.assetRef)) { return false; }
        if (spendable == null && _o.spendable != null) { return false; }
        else if (spendable != null && !spendable.equals(_o.spendable)) { return false; }
        return true;
    }

    @Override
    public int hashCode() {
        int _hash = 1;
        _hash = _hash * 31 + (balance == null ? 0 : balance.hashCode());
        _hash = _hash * 31 + (name_short == null ? 0 : name_short.hashCode());
        _hash = _hash * 31 + (name == null ? 0 : name.hashCode());
        _hash = _hash * 31 + (assetRef == null ? 0 : assetRef.hashCode());
        _hash = _hash * 31 + (spendable == null ? 0 : spendable.hashCode());
        return _hash;
    }
}

